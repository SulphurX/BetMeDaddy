// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
  binaryTargets   = ["native", "debian-openssl-3.0.x", "linux-arm64-openssl-1.1.x", "rhel-openssl-1.0.x", "linux-musl-arm64-openssl-3.0.x", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Pods {
  id                    String   @id @default(uuid()) @db.Uuid
  title                 String   @unique
  slug                  String
  deadline              DateTime
  description           String
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt
  token                 String
  rewardAmount          Int
  rewards               String[]
  skills                String[]
  type                  String
  requirements          String[]
  totalPaymentMade      Int
  totalWinnersSelected  Int
  isWinnerAnnounced     Boolean
  region                String
  pocSocial             String
  timeToComplete        String
  winners               String[]
  sponsors              String[]
}

model User {
  id        String   @id @default(uuid()) @db.Uuid
  wallet    String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  isCompany   Boolean  @default(false)
  profile   Profile?
}

model Profile {
  id        String   @id @default(uuid()) @db.Uuid
  image     String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  github    String?
  linkedin  String?
  twitter   String?
  userId    String? @unique @db.Uuid
  user      User?   @relation(fields: [userId], references: [id])
}